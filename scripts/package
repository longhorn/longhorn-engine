#!/bin/bash
set -e

source $(dirname $0)/version

cd $(dirname $0)/..

PROJECT=$(basename "${PWD}")

command -v buildx >/dev/null && BUILD_CMD=(buildx) || BUILD_CMD=(docker buildx)

# read configurable parameters
REPO=${REPO:-longhornio}
IMAGE_NAME=${IMAGE_NAME:-${PROJECT}}
TAG=${TAG:-${VERSION}}
PUSH=${PUSH:-'false'}
IS_SECURE=${IS_SECURE:-'false'}
MACHINE=${MACHINE:-''}
TARGET_PLATFORMS=${TARGET_PLATFORMS:-''}
IID_FILE=${IID_FILE:-''}
IID_FILE_FLAG=${IID_FILE_FLAG:-''}
SRC_BRANCH=${SRC_BRANCH:-''}
SRC_TAG=${SRC_TAG:-''}

IAMGE="${REPO}/${IMAGE_NAME}:${TAG}"

BUILDER_ARGS=()
[[ ${MACHINE} ]] && BUILDER_ARGS+=('--builder' "${MACHINE}")

IFS=' ' read -r -a IID_FILE_ARGS <<<"${IID_FILE_FLAG}"
[[ -n "${IID_FILE}" && ${#IID_FILE_ARGS} == 0 ]] && IID_FILE_ARGS=('--iidfile' "${IID_FILE}")

BUILDX_ARGS=()

if [[ "${PUSH}" == 'true' ]]; then
    BUILDX_ARGS+=('--push')
else
    BUILDX_ARGS+=('--load')
fi

[[ ${IS_SECURE} == 'true' ]] && BUILDX_ARGS+=('--sbom=true' '--attest' 'type=provenance,mode=max')

if [[ ${TARGET_PLATFORMS} ]] ; then
    IFS='/' read -r os ARCH <<<"${TARGET_PLATFORMS}"
    BUILDX_ARGS+=('--platform' "${TARGET_PLATFORMS}")
else
    case $(uname -m) in
    aarch64 | arm64)
        ARCH=arm64
        ;;
    x86_64)
        ARCH=amd64
        ;;
    s390x)
        ARCH=s390x
        ;;
    *)
        echo "$(uname -a): unsupported architecture"
        exit 1
    esac
    BUILDX_ARGS+=('--platform' "linux/${ARCH}")
fi

IMAGE_ARGS=(--build-arg ARCH="${ARCH}")
[[ -n "${SRC_BRANCH}" ]] && IMAGE_ARGS+=(--build-arg SRC_BRANCH="${SRC_BRANCH}")
[[ -n "${SRC_TAG}" ]] && IMAGE_ARGS+=(--build-arg SRC_TAG="${SRC_TAG}")

# update base image to get latest changes
grep 'FROM.*/' package/Dockerfile | awk '{print $2}' | while read -r BASE_IMAGE
do
    docker pull "${BASE_IMAGE}"
done

echo "Building ${IMAGE} with ARCH=${ARCH} SRC_BRANCH=${SRC_BRANCH} SRC_TAG=${SRC_TAG} "
IMAGE_BUILD_CMD_ARGS=(
    build --no-cache \
    "${BUILDER_ARGS[@]}" \
    "${IID_FILE_ARGS[@]}" \
    "${BUILDX_ARGS[@]}" \
    "${IMAGE_ARGS[@]}" \
    -t "${IAMGE}" -f package/Dockerfile .
)
echo "${BUILD_CMD[@]}" "${IMAGE_BUILD_CMD_ARGS[@]}"
"${BUILD_CMD[@]}" "${IMAGE_BUILD_CMD_ARGS[@]}"

echo "Built ${IAMGE}"

mkdir -p ./bin
echo "${IAMGE}" > ./bin/latest_image
