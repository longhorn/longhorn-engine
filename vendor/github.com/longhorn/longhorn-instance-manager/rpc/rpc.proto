syntax="proto3";

import "google/protobuf/empty.proto";

service EngineManagerService {
	rpc EngineCreate(EngineCreateRequest) returns (EngineResponse) {}
	rpc EngineDelete(EngineRequest) returns (EngineResponse) {}
	rpc EngineGet(EngineRequest) returns (EngineResponse) {}
	rpc EngineList(google.protobuf.Empty) returns (EngineListResponse) {}
	rpc EngineUpgrade(EngineUpgradeRequest) returns (EngineResponse) {}
	rpc EngineLog(LogRequest) returns (stream LogResponse) {}
	rpc EngineWatch(google.protobuf.Empty) returns (stream EngineResponse) {}

	rpc FrontendStart(FrontendStartRequest) returns (google.protobuf.Empty) {}
	rpc FrontendShutdown(EngineRequest) returns (google.protobuf.Empty) {}

	rpc FrontendStartCallback(EngineRequest) returns (google.protobuf.Empty) {}
	rpc FrontendShutdownCallback(EngineRequest) returns (google.protobuf.Empty) {}

}

message EngineSpec {
	string name = 1;
	string volume_name = 2;
	string binary = 3;
	string listen = 4;
	string listen_ip = 5;
	int64 size = 6;
	string frontend = 7;
	repeated string backends = 8;
	repeated string replicas = 9;
}

message EngineStatus {
	ProcessStatus process_status = 1;
	string endpoint = 2;
}

message EngineResponse {
	EngineSpec spec = 1;
	EngineStatus status = 2;
	bool deleted = 3;
}

message EngineCreateRequest {
	EngineSpec spec = 1;
}

message EngineRequest {
	string name = 1;
}

message EngineUpgradeRequest {
	EngineSpec spec = 1;
}

message EngineListResponse {
	map<string, EngineResponse> engines = 1;
}

message FrontendStartRequest {
	string name = 1;
	string frontend = 2;
}

service ProcessManagerService {
	rpc ProcessCreate(ProcessCreateRequest) returns (ProcessResponse) {}
	rpc ProcessDelete(ProcessDeleteRequest) returns (ProcessResponse) {}
	rpc ProcessGet(ProcessGetRequest) returns (ProcessResponse) {}
	rpc ProcessList(ProcessListRequest) returns (ProcessListResponse) {}
	rpc ProcessLog(LogRequest) returns (stream LogResponse) {}
	rpc ProcessWatch(google.protobuf.Empty) returns (stream ProcessResponse) {}
}

message ProcessSpec {
	string name = 1;
	string binary = 2;
	repeated string args = 3;
	int32 port_count = 4;
	repeated string port_args = 5;
}

message ProcessStatus {
	string state = 1;
	string error_msg = 2;
	int32 port_start = 3;
	int32 port_end = 4;
}

message ProcessCreateRequest {
	ProcessSpec spec = 1;
}

message ProcessDeleteRequest {
	string name = 1;
}

message ProcessGetRequest {
	string name = 1;
}

message ProcessResponse {
	ProcessSpec spec = 1;
	ProcessStatus status = 2;
	bool deleted = 3;
}

message ProcessListRequest{
}

message ProcessListResponse{
	map<string, ProcessResponse> processes = 1;
}

message LogRequest {
	string name = 1;
}

message LogResponse{
	string line = 2;
}
