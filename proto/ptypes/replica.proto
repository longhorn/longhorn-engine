syntax="proto3";

package ptypes;

import "google/protobuf/empty.proto";

service ReplicaService {
    rpc ReplicaCreate(ReplicaCreateRequest) returns (Replica) {}
    rpc ReplicaDelete(google.protobuf.Empty) returns (google.protobuf.Empty) {}
    rpc ReplicaGet(google.protobuf.Empty) returns (Replica) {}
    rpc ReplicaOpen(google.protobuf.Empty) returns (Replica) {}
    rpc ReplicaClose(google.protobuf.Empty) returns (Replica) {}
    rpc ReplicaReload(google.protobuf.Empty) returns (Replica) {}
    rpc ReplicaRevert(ReplicaRevertRequest) returns (Replica) {}
    rpc ReplicaSnapshot(ReplicaSnapshotRequest) returns (Replica) {}
    rpc ReplicaExpand(ReplicaExpandRequest) returns (Replica) {}
    rpc DiskRemove(DiskRemoveRequest) returns (Replica) {}
    rpc DiskReplace(DiskReplaceRequest) returns (Replica) {}
    rpc DiskPrepareRemove(DiskPrepareRemoveRequest) returns (DiskPrepareRemoveReply) {}
    rpc DiskMarkAsRemoved(DiskMarkAsRemovedRequest) returns (Replica) {}
    rpc RebuildingSet(RebuildingSetRequest) returns (Replica) {}
    rpc RevisionCounterSet(RevisionCounterSetRequest) returns (Replica) {}
}

message ReplicaCreateRequest {
    string size = 1;
}

message ReplicaRevertRequest {
    string name = 1;
    string created = 2;
}

message ReplicaSnapshotRequest {
    string name = 1;
    bool userCreated = 2;
    string created = 3;
    map<string, string> labels = 4;
}

message ReplicaExpandRequest {
    int64 size = 1;
}

message DiskRemoveRequest {
    string name = 1;
    bool force = 2;
}

message DiskReplaceRequest {
    string target = 1;
    string source = 2;
}

message DiskPrepareRemoveRequest {
    string name = 1;
}

message DiskPrepareRemoveReply {
    repeated PrepareRemoveAction operations = 1;
}

message DiskMarkAsRemovedRequest {
    string name = 1;
}

message RebuildingSetRequest {
    bool rebuilding = 1;
}

message RevisionCounterSetRequest {
    int64 counter = 1;
}

message DiskInfo {
    string name = 1;
    string parent = 2;
    map<string, bool> children = 3;
    bool removed = 4;
    bool userCreated = 5;
    string created = 6;
    string size = 7;
    map<string, string> labels = 8;
}

message Replica {
    bool dirty = 1;
    bool rebuilding = 2;
    string head = 3;
    string parent = 4;
    string size = 5;
    int64 sectorSize = 6;
    string backingFile = 7;
    string state = 8;
    repeated string chain = 9;
    map<string, DiskInfo> disks = 10;
    int32 remainSnapshots = 11;
    int64 revisionCounter = 12;
}

message PrepareRemoveAction {
    string action = 1;
    string source = 2;
    string target = 3;
}