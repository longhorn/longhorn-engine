#---
#kind: pipeline
#name: default-amd64
#
#platform:
#  os: linux
#  arch: amd64
#
#steps:
#- name: fetch
#  image: ubuntu:18.04
#  commands:
#  - apt-get update
#  - apt-get install -y git
#  - git fetch --tags
#
#- name: build
#  pull: default
#  image: rancher/dapper:v0.5.3
#  commands:
#  - dapper ci
#  privileged: true
#  volumes:
#  - name: socket
#    path: /var/run/docker.sock
#
#- name: publish-master-image
#  image: plugins/docker
#  settings:
#    build_args:
#    - ARCH=amd64
#    custom_dns: 1.1.1.1
#    dockerfile: package/Dockerfile
#    password:
#      from_secret: docker_password
#    repo: longhornio/longhorn-engine
#    tag: "master-amd64"
#    username:
#      from_secret: docker_username
#  when:
#    branch:
#    - master
#    event:
#    - push
#
#- name: publish-tagged-image
#  image: plugins/docker
#  settings:
#    build_args:
#    - ARCH=amd64
#    custom_dns: 1.1.1.1
#    dockerfile: package/Dockerfile
#    password:
#      from_secret: docker_password
#    repo: longhornio/longhorn-engine
#    tag: "${DRONE_TAG}-amd64"
#    username:
#      from_secret: docker_username
#  when:
#    branch:
#    - master
#    event:
#    - tag
#
#- name: slack_notify
#  image: plugins/slack
#  settings:
#    template: "Build {{build.link}} failed.\n"
#    username: Drone_Publish
#    webhook:
#      from_secret: slack_webhook
#  when:
#    event:
#      exclude:
#      - pull_request
#    instance:
#      include:
#      - drone-publish.longhorn.io
#    status:
#      - failure
#
#volumes:
#- name: socket
#  host:
#    path: /var/run/docker.sock
#
#---
#kind: pipeline
#name: default-arm64
#
#platform:
#  os: linux
#  arch: arm64
#
#steps:
#- name: fetch
#  image: ubuntu:18.04
#  commands:
#  - apt-get update
#  - apt-get install -y git
#  - git fetch --tags
#
#- name: build
#  pull: default
#  image: rancher/dapper:v0.5.3
#  commands:
#  - dapper ci
#  privileged: true
#  volumes:
#  - name: socket
#    path: /var/run/docker.sock
#
#- name: publish-master-image
#  image: plugins/docker
#  settings:
#    build_args:
#    - ARCH=arm64
#    custom_dns: 1.1.1.1
#    dockerfile: package/Dockerfile
#    password:
#      from_secret: docker_password
#    repo: longhornio/longhorn-engine
#    tag: "master-arm64"
#    username:
#      from_secret: docker_username
#  when:
#    branch:
#    - master
#    event:
#    - push
#
#- name: publish-tagged-image
#  image: plugins/docker
#  settings:
#    build_args:
#    - ARCH=arm64
#    custom_dns: 1.1.1.1
#    dockerfile: package/Dockerfile
#    password:
#      from_secret: docker_password
#    repo: longhornio/longhorn-engine
#    tag: "${DRONE_TAG}-arm64"
#    username:
#      from_secret: docker_username
#  when:
#    branch:
#    - master
#    event:
#    - tag
#
#- name: slack_notify
#  image: plugins/slack
#  settings:
#    template: "Build {{build.link}} failed.\n"
#    username: Drone_Publish
#    webhook:
#      from_secret: slack_webhook
#  when:
#    event:
#      exclude:
#      - pull_request
#    instance:
#      include:
#      - drone-publish.longhorn.io
#    status:
#      - failure
#
#volumes:
#- name: socket
#  host:
#    path: /var/run/docker.sock
#
#---
#kind: pipeline
#name: manifest
#
#platform:
#  os: linux
#  arch: amd64
#
#steps:
#- name: manifest-master
#  image: plugins/manifest:1
#  settings:
#    username:
#      from_secret: docker_username
#    password:
#      from_secret: docker_password
#    platforms:
#      - linux/amd64
#      - linux/arm64
#    target: "longhornio/longhorn-engine:master"
#    template: "longhornio/longhorn-engine:master-ARCH"
#  when:
#    instance:
#    - drone-publish.longhorn.io
#    branch:
#    - master
#    event:
#    - push
#
#- name: manifest-tag
#  image: plugins/manifest:1
#  settings:
#    username:
#      from_secret: docker_username
#    password:
#      from_secret: docker_password
#    platforms:
#      - linux/amd64
#      - linux/arm64
#    target: "longhornio/longhorn-engine:${DRONE_TAG}"
#    template: "longhornio/longhorn-engine:${DRONE_TAG}-ARCH"
#  when:
#    instance:
#    - drone-publish.longhorn.io
#    branch:
#    - master
#    event:
#    - tag
#
#depends_on:
#- default-amd64
#- default-arm64
#---

kind: pipeline
name: engine-compatible-image-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: generate new commit
  image: ubuntu:18.04
  commands:
  - apt-get update
  - apt-get install -y git
  - git fetch --tags
  - git commit --amend --no-edit

- name: package
  pull: default
  image: rancher/dapper:v0.5.3
  commands:
  - dapper package
  privileged: true
  volumes:
  - name: socket
    path: /var/run/docker.sock

- name: generate tag from version
  pull: default
  image: ubuntu:18.04
  commands:
  - apt-get update -y
  - apt-get install -y jq
  - ./bin/longhorn version --client-only | jq '.clientVersion | "live-upgrade-staging-", .cliAPIVersion,"-", .controllerAPIVersion, "-", .dataFormatVersion, "-amd64"| tostring' | tr '\n' ' ' | tr -d '"' | tr -d ' ' > .tags
  privileged: true
  volumes:
  - name: socket
    path: /var/run/docker.sock

- name: publish-compatible-engine-amd64
  image: plugins/docker
  settings:
    build_args:
    - ARCH=amd64
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    password:
      from_secret: docker_password
    repo: longhornio/longhorn-engine
    username:
      from_secret: docker_username
  when:
    instance:
      include:
      - drone-publish.longhorn.io
    #branch:
    #- master
    event:
    - push

- name: slack_notify
  image: plugins/slack
  settings:
    template: "Build {{build.link}} failed.\n"
    username: Drone_Publish
    webhook:
      from_secret: slack_webhook
  when:
    event:
      exclude:
      - pull_request
    instance:
      include:
      - drone-publish.longhorn.io
    status:
      - failure

volumes:
- name: socket
  host:
    path: /var/run/docker.sock

#depends_on:                                                                     
#- default-amd64                                                                 
---
kind: pipeline
name: engine-compatible-image-arm64

platform:
  os: linux
  arch: arm64

steps:
- name: generate new commit
  image: ubuntu:18.04
  commands:
  - apt-get update
  - apt-get install -y git
  - git fetch --tags
  - git commit --amend --no-edit

- name: package
  pull: default
  image: rancher/dapper:v0.5.3
  commands:
  - dapper package
  privileged: true
  volumes:
  - name: socket
    path: /var/run/docker.sock

- name: generate tag from version
  pull: default
  image: ubuntu:18.04
  commands:
  - apt-get update -y
  - apt-get install -y jq
  - ./bin/longhorn version --client-only | jq '.clientVersion | "live-upgrade-staging-", .cliAPIVersion,"-", .controllerAPIVersion, "-", .dataFormatVersion, "-arm64"| tostring' | tr '\n' ' ' | tr -d '"' | tr -d ' ' > .tags
  privileged: true
  volumes:
  - name: socket
    path: /var/run/docker.sock

- name: publish-compatible-engine-arm64
  image: plugins/docker
  settings:
    build_args:
    - ARCH=arm64
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    password:
      from_secret: docker_password
    repo: longhornio/longhorn-engine
    username:
      from_secret: docker_username
  when:
    instance:
      include:
      - drone-publish.longhorn.io
    #branch:
    #- master
    event:
    - push

- name: slack_notify
  image: plugins/slack
  settings:
    template: "Build {{build.link}} failed.\n"
    username: Drone_Publish
    webhook:
      from_secret: slack_webhook
  when:
    event:
      exclude:
      - pull_request
    instance:
      include:
      - drone-publish.longhorn.io
    status:
      - failure

volumes:
- name: socket
  host:
    path: /var/run/docker.sock
#depends_on:
#- default-arm64 

---
kind: pipeline
name: engine-compatible-image-manifest

platform:
  os: linux
  arch: amd64

steps:
- name: package
  pull: default
  image: rancher/dapper:v0.5.3
  commands:
  - dapper package
  privileged: true
  volumes:
  - name: socket
    path: /var/run/docker.sock

- name: generate tag from version
  pull: default
  image: ubuntu:18.04
  commands:
  - apt-get update -y
  - apt-get install -y jq
  - ./bin/longhorn version --client-only | jq '.clientVersion | "live-upgrade-staging-", .cliAPIVersion,"-", .controllerAPIVersion, "-", .dataFormatVersion | tostring' | tr '\n' ' ' | tr -d '"' | tr -d ' ' > .tags
  privileged: true
  volumes:
  - name: socket
    path: /var/run/docker.sock

- name: engine-compatible-image-manifest
  image: plugins/manifest:latest
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    platforms:
      - linux/amd64
      - linux/arm64
    spec: ./drone-manifest.tmpl
    auto_tag: true
    dump: true
  when:
    instance:
    - drone-publish.longhorn.io
    #branch:
    #- master
    event:
    - push

depends_on:
- engine-compatible-image-amd64
- engine-compatible-image-arm64
#- default-amd64                                                                 
#- default-arm64 

volumes:                                                                        
- name: socket                                                                  
  host:                                                                         
    path: /var/run/docker.sock 
