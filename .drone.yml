---
kind: pipeline
name: default-amd64

platform:
  os: linux
  arch: amd64

trigger:
  branch:
  - master
  - main
  - v*

steps:
- name: fetch
  image: ubuntu:18.04
  commands:
  - apt-get update
  - apt-get install -y git
  - git fetch --tags

- name: build
  pull: default
  image: rancher/dapper:v0.5.3
  commands:
  - dapper ci
  privileged: true
  volumes:
  - name: socket
    path: /var/run/docker.sock

- name: codecov
  image: robertstettner/drone-codecov
  settings:
    token:
      from_secret: CODECOV_TOKEN
    debug: true

- name: fossa
  image: registry.suse.com/suse/sle15:15.3.17.8.1
  failure: ignore
  environment:
    FOSSA_API_KEY:
      from_secret: FOSSA_API_KEY
  commands:
    - zypper -n install curl unzip
    - "curl -H 'Cache-Control: no-cache' https://raw.githubusercontent.com/fossas/spectrometer/master/install.sh | sh"
    - fossa analyze
    - fossa test
  when:
    instance:
      - drone-publish.longhorn.io
    ref:
      include:
        - "refs/heads/master"
    event:
      - push
      - tag

- name: publish-image
  image: plugins/docker
  settings:
    build_args:
    - ARCH=amd64
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    password:
      from_secret: docker_password
    repo: longhornio/longhorn-engine
    tag: "${DRONE_BRANCH}-head-amd64"
    username:
      from_secret: docker_username
  when:
    event:
    - push

- name: publish-tagged-image
  image: plugins/docker
  settings:
    build_args:
    - ARCH=amd64
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    password:
      from_secret: docker_password
    repo: longhornio/longhorn-engine
    tag: "${DRONE_TAG}-amd64"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

- name: slack_notify
  image: plugins/slack
  settings:
    template: "Build {{build.link}} failed.\n"
    username: Drone_Publish
    webhook:
      from_secret: slack_webhook
  when:
    event:
      exclude:
      - pull_request
    instance:
      include:
      - drone-publish.longhorn.io
    status:
      - failure

volumes:
- name: socket
  host:
    path: /var/run/docker.sock

---
kind: pipeline
name: default-arm64

platform:
  os: linux
  arch: arm64

trigger:
  branch:
  - master
  - main
  - v*

steps:
- name: fetch
  image: ubuntu:18.04
  commands:
  - apt-get update
  - apt-get install -y git
  - git fetch --tags

- name: build
  pull: default
  image: rancher/dapper:v0.5.3
  commands:
  - dapper ci
  privileged: true
  volumes:
  - name: socket
    path: /var/run/docker.sock

- name: publish-image
  image: plugins/docker
  settings:
    build_args:
    - ARCH=arm64
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    password:
      from_secret: docker_password
    repo: longhornio/longhorn-engine
    tag: "${DRONE_BRANCH}-head-arm64"
    username:
      from_secret: docker_username
  when:
    event:
    - push

- name: publish-tagged-image
  image: plugins/docker
  settings:
    build_args:
    - ARCH=arm64
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    password:
      from_secret: docker_password
    repo: longhornio/longhorn-engine
    tag: "${DRONE_TAG}-arm64"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

- name: slack_notify
  image: plugins/slack
  settings:
    template: "Build {{build.link}} failed.\n"
    username: Drone_Publish
    webhook:
      from_secret: slack_webhook
  when:
    event:
      exclude:
      - pull_request
    instance:
      include:
      - drone-publish.longhorn.io
    status:
      - failure

volumes:
- name: socket
  host:
    path: /var/run/docker.sock

---
kind: pipeline
name: default-s390x

node:
  arch: s390x

platform:
  os: linux
  arch: amd64

trigger:
  event:
    exclude:
    - pull_request
  branch:
  - master
  - main
  - v*

steps:
- name: fetch
  image: ubuntu:18.04
  commands:
  - apt-get update
  - apt-get install -y git
  - git fetch --tags

- name: build
  pull: default
  image: rancher/dapper:v0.5.8
  commands:
  - dapper ci
  privileged: true
  volumes:
  - name: socket
    path: /var/run/docker.sock

- name: publish-image
  image: rancher/drone-images:docker-s390x
  settings:
    build_args:
    - ARCH=s390x
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    password:
      from_secret: docker_password
    repo: longhornio/longhorn-engine
    tag: "${DRONE_BRANCH}-head-s390x"
    username:
      from_secret: docker_username
  volumes:
    - name: socket
      path: /var/run/docker.sock
  when:
    event:
    - push

- name: publish-tagged-image
  image: rancher/drone-images:docker-s390x
  settings:
    build_args:
    - ARCH=s390x
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile
    password:
      from_secret: docker_password
    repo: longhornio/longhorn-engine
    tag: "${DRONE_TAG}-s390x"
    username:
      from_secret: docker_username
  volumes:
    - name: socket
      path: /var/run/docker.sock
  when:
    event:
    - tag

- name: slack_notify
  image: plugins/slack
  settings:
    template: "Build {{build.link}} failed.\n"
    username: Drone_Publish
    webhook:
      from_secret: slack_webhook
  when:
    event:
      exclude:
      - pull_request
    instance:
      include:
      - drone-publish.longhorn.io
    status:
      - failure

volumes:
- name: socket
  host:
    path: /var/run/docker.sock

---
kind: pipeline
name: manifest

platform:
  os: linux
  arch: amd64

trigger:
  event:
    exclude:
    - pull_request
  branch:
  - master
  - main
  - v*

steps:
- name: manifest
  image: plugins/manifest:1
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    platforms:
      - linux/amd64
      - linux/arm64
      - linux/s390x
    target: "longhornio/longhorn-engine:${DRONE_BRANCH}-head"
    template: "longhornio/longhorn-engine:${DRONE_BRANCH}-head-ARCH"
  when:
    instance:
    - drone-publish.longhorn.io
    event:
    - push

- name: manifest-tag
  image: plugins/manifest:1
  settings:
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    platforms:
      - linux/amd64
      - linux/arm64
      - linux/s390x
    target: "longhornio/longhorn-engine:${DRONE_TAG}"
    template: "longhornio/longhorn-engine:${DRONE_TAG}-ARCH"
  when:
    instance:
    - drone-publish.longhorn.io
    event:
    - tag

depends_on:
- default-amd64
- default-arm64
- default-s390x
